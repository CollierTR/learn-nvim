{
  "enterprise_platform": {
    "section_1_frontend_services": {
      "web_application": {
        "name": "enterprise-web-app",
        "technology": "React 18.2.0",
        "build_tool": "Vite 4.3.0",
        "package_manager": "npm",
        "dependencies": {
          "react": "^18.2.0",
          "react-dom": "^18.2.0",
          "react-router-dom": "^6.8.0",
          "axios": "^1.3.0",
          "material-ui": "^5.11.0",
          "redux-toolkit": "^1.9.0",
          "typescript": "^4.9.0"
        },
        "environment_config": {
          "development": {
            "api_base_url": "http://localhost:3001/api",
            "debug_mode": true,
            "hot_reload": true
          },
          "staging": {
            "api_base_url": "https://api-staging.company.com/api",
            "debug_mode": false,
            "hot_reload": false
          },
          "production": {
            "api_base_url": "https://api.company.com/api",
            "debug_mode": false,
            "hot_reload": false,
            "cdn_url": "https://cdn.company.com"
          }
        }
      },
      "mobile_application": {
        "name": "enterprise-mobile-app",
        "technology": "React Native 0.71.0",
        "build_tool": "Metro",
        "dependencies": {
          "react-native": "^0.71.0",
          "react-navigation": "^6.1.0",
          "react-native-async-storage": "^1.17.0",
          "react-native-keychain": "^8.1.0"
        },
        "platform_config": {
          "ios": {
            "bundle_id": "com.company.enterprise",
            "deployment_target": "13.0",
            "code_signing": "automatic"
          },
          "android": {
            "package_name": "com.company.enterprise",
            "min_sdk_version": 21,
            "target_sdk_version": 33,
            "compile_sdk_version": 33
          }
        }
      }
    },
    "section_2_backend_services": {
      "api_gateway": {
        "name": "enterprise-api-gateway",
        "technology": "Kong 3.2.0",
        "plugins": [
          "rate-limiting",
          "authentication",
          "cors",
          "prometheus",
          "request-transformer"
        ],
        "upstream_services": {
          "user_service": {
            "url": "http://user-service.backend.svc.cluster.local:8080",
            "health_check": "/health",
            "timeout": 30000,
            "retries": 3
          },
          "order_service": {
            "url": "http://order-service.backend.svc.cluster.local:8080",
            "health_check": "/health",
            "timeout": 30000,
            "retries": 3
          },
          "payment_service": {
            "url": "http://payment-service.backend.svc.cluster.local:8080",
            "health_check": "/health",
            "timeout": 15000,
            "retries": 5
          }
        }
      },
      "user_management_service": {
        "name": "user-service",
        "technology": "Spring Boot 3.0.0",
        "java_version": "17",
        "framework_version": "6.0.0",
        "database": {
          "type": "PostgreSQL",
          "version": "15.2",
          "connection_pool": {
            "initial_size": 5,
            "max_size": 20,
            "timeout": 30000
          }
        },
        "security": {
          "authentication": "JWT",
          "authorization": "RBAC",
          "password_policy": {
            "min_length": 12,
            "require_uppercase": true,
            "require_lowercase": true,
            "require_numbers": true,
            "require_special_chars": true
          }
        }
      },
      "order_processing_service": {
        "name": "order-service",
        "technology": "Node.js 18.15.0",
        "framework": "Express.js 4.18.0",
        "runtime": "Node.js",
        "dependencies": {
          "express": "^4.18.0",
          "mongoose": "^7.0.0",
          "joi": "^17.7.0",
          "bcryptjs": "^2.4.3",
          "jsonwebtoken": "^9.0.0"
        },
        "database": {
          "type": "MongoDB",
          "version": "6.0",
          "replica_set": true,
          "connection_string": "mongodb://mongo-0.mongo.svc.cluster.local:27017,mongo-1.mongo.svc.cluster.local:27017,mongo-2.mongo.svc.cluster.local:27017/orders?replicaSet=rs0"
        }
      }
    },
    "section_3_data_storage": {
      "primary_database": {
        "type": "PostgreSQL",
        "version": "15.2",
        "cluster_config": {
          "primary": {
            "host": "postgres-primary.database.svc.cluster.local",
            "port": 5432,
            "max_connections": 200,
            "shared_buffers": "256MB",
            "effective_cache_size": "1GB"
          },
          "read_replicas": [
            {
              "host": "postgres-replica-1.database.svc.cluster.local",
              "port": 5432,
              "max_connections": 100
            },
            {
              "host": "postgres-replica-2.database.svc.cluster.local",
              "port": 5432,
              "max_connections": 100
            }
          ]
        },
        "backup_strategy": {
          "full_backup_schedule": "0 2 * * *",
          "incremental_backup_schedule": "0 */6 * * *",
          "retention_policy": "30 days",
          "backup_location": "s3://database-backups/postgresql/"
        }
      },
      "document_database": {
        "type": "MongoDB",
        "version": "6.0",
        "replica_set": {
          "name": "enterprise-rs",
          "members": [
            {
              "host": "mongo-0.mongo.svc.cluster.local:27017",
              "priority": 1,
              "votes": 1
            },
            {
              "host": "mongo-1.mongo.svc.cluster.local:27017",
              "priority": 0.5,
              "votes": 1
            },
            {
              "host": "mongo-2.mongo.svc.cluster.local:27017",
              "priority": 0.5,
              "votes": 1
            }
          ]
        },
        "sharding": {
          "enabled": true,
          "shard_key": "user_id",
          "chunks_per_shard": 100
        }
      },
      "cache_layer": {
        "type": "Redis",
        "version": "7.0",
        "deployment_mode": "cluster",
        "nodes": [
          {
            "host": "redis-0.cache.svc.cluster.local",
            "port": 6379,
            "role": "master"
          },
          {
            "host": "redis-1.cache.svc.cluster.local",
            "port": 6379,
            "role": "replica"
          },
          {
            "host": "redis-2.cache.svc.cluster.local",
            "port": 6379,
            "role": "replica"
          }
        ],
        "configuration": {
          "max_memory": "2GB",
          "max_memory_policy": "allkeys-lru",
          "timeout": 300,
          "tcp_keepalive": 60
        }
      }
    },
    "section_4_infrastructure": {
      "kubernetes_cluster": {
        "version": "1.27.0",
        "node_groups": [
          {
            "name": "control-plane",
            "instance_type": "t3.medium",
            "min_size": 3,
            "max_size": 3,
            "desired_capacity": 3
          },
          {
            "name": "worker-nodes",
            "instance_type": "t3.large",
            "min_size": 5,
            "max_size": 20,
            "desired_capacity": 10
          },
          {
            "name": "storage-nodes",
            "instance_type": "r5.xlarge",
            "min_size": 3,
            "max_size": 5,
            "desired_capacity": 3
          }
        ],
        "networking": {
          "pod_cidr": "10.244.0.0/16",
          "service_cidr": "10.96.0.0/12",
          "cluster_dns": "10.96.0.10"
        }
      },
      "load_balancers": {
        "external_load_balancer": {
          "type": "Application Load Balancer",
          "scheme": "internet-facing",
          "subnets": [
            "subnet-12345678",
            "subnet-87654321",
            "subnet-11223344"
          ],
          "security_groups": [
            "sg-web-tier",
            "sg-alb-access"
          ]
        },
        "internal_load_balancer": {
          "type": "Network Load Balancer",
          "scheme": "internal",
          "subnets": [
            "subnet-internal-1",
            "subnet-internal-2",
            "subnet-internal-3"
          ]
        }
      },
      "storage_systems": {
        "block_storage": {
          "type": "EBS",
          "volume_types": [
            {
              "type": "gp3",
              "size": "100GB",
              "iops": 3000,
              "throughput": "125MB/s"
            },
            {
              "type": "io2",
              "size": "500GB",
              "iops": 10000
            }
          ]
        },
        "object_storage": {
          "type": "S3",
          "buckets": [
            {
              "name": "enterprise-static-assets",
              "region": "us-west-2",
              "versioning": true,
              "encryption": "AES256"
            },
            {
              "name": "enterprise-backups",
              "region": "us-west-2",
              "storage_class": "IA",
              "lifecycle_policy": true
            }
          ]
        }
      }
    },
    "section_5_monitoring": {
      "observability_stack": {
        "metrics": {
          "prometheus": {
            "version": "2.42.0",
            "retention": "15d",
            "storage_size": "100GB",
            "scrape_configs": [
              {
                "job_name": "kubernetes-apiservers",
                "scrape_interval": "30s"
              },
              {
                "job_name": "kubernetes-nodes",
                "scrape_interval": "30s"
              },
              {
                "job_name": "application-metrics",
                "scrape_interval": "15s"
              }
            ]
          },
          "grafana": {
            "version": "9.4.0",
            "dashboards": [
              "kubernetes-cluster-overview",
              "application-performance",
              "infrastructure-health",
              "business-metrics"
            ]
          }
        },
        "logging": {
          "elasticsearch": {
            "version": "8.6.0",
            "cluster_size": 3,
            "index_retention": "30d",
            "shard_configuration": {
              "primary_shards": 5,
              "replica_shards": 1
            }
          },
          "kibana": {
            "version": "8.6.0",
            "index_patterns": [
              "application-logs-*",
              "infrastructure-logs-*",
              "security-logs-*"
            ]
          }
        },
        "tracing": {
          "jaeger": {
            "version": "1.42.0",
            "sampling_strategy": "probabilistic",
            "sampling_rate": 0.1,
            "storage_backend": "elasticsearch"
          }
        }
      },
      "alerting": {
        "alertmanager": {
          "version": "0.25.0",
          "notification_channels": [
            {
              "type": "slack",
              "webhook_url": "https://hooks.slack.com/services/T123/B456/xyz789",
              "channel": "#alerts"
            },
            {
              "type": "email",
              "smtp_server": "smtp.company.com",
              "recipients": ["oncall@company.com"]
            },
            {
              "type": "pagerduty",
              "service_key": "your-pagerduty-service-key",
              "severity": "critical"
            }
          ]
        }
      }
    },
    "section_6_security": {
      "identity_management": {
        "authentication_provider": {
          "type": "OAuth2",
          "issuer": "https://auth.company.com",
          "client_id": "enterprise-platform",
          "supported_flows": [
            "authorization_code",
            "client_credentials",
            "refresh_token"
          ]
        },
        "authorization_policies": [
          {
            "name": "admin-policy",
            "effect": "allow",
            "principals": ["group:administrators"],
            "actions": ["*"],
            "resources": ["*"]
          },
          {
            "name": "developer-policy",
            "effect": "allow",
            "principals": ["group:developers"],
            "actions": ["read", "write"],
            "resources": ["apps/*", "configs/*"]
          },
          {
            "name": "viewer-policy",
            "effect": "allow",
            "principals": ["group:viewers"],
            "actions": ["read"],
            "resources": ["*"]
          }
        ]
      },
      "network_security": {
        "firewalls": [
          {
            "name": "web-tier-sg",
            "rules": [
              {
                "type": "ingress",
                "protocol": "tcp",
                "port": 443,
                "source": "0.0.0.0/0"
              },
              {
                "type": "ingress",
                "protocol": "tcp",
                "port": 80,
                "source": "0.0.0.0/0"
              }
            ]
          },
          {
            "name": "app-tier-sg",
            "rules": [
              {
                "type": "ingress",
                "protocol": "tcp",
                "port": 8080,
                "source": "sg-web-tier"
              }
            ]
          }
        ],
        "network_policies": [
          {
            "name": "deny-all-default",
            "policy_type": "ingress",
            "pod_selector": {},
            "ingress": []
          },
          {
            "name": "allow-frontend-to-backend",
            "policy_type": "ingress",
            "pod_selector": {
              "match_labels": {
                "tier": "backend"
              }
            },
            "ingress": [
              {
                "from": [
                  {
                    "pod_selector": {
                      "match_labels": {
                        "tier": "frontend"
                      }
                    }
                  }
                ],
                "ports": [
                  {
                    "protocol": "TCP",
                    "port": 8080
                  }
                ]
              }
            ]
          }
        ]
      }
    }
  }
}