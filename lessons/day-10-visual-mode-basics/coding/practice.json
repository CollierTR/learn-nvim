{
  "microservices_architecture": {
    "services": {
      "user_service": {
        "metadata": {
          "name": "user-service",
          "version": "v2.1.0",
          "description": "User management and authentication service"
        },
        "configuration": {
          "server": {
            "port": 8080,
            "host": "0.0.0.0",
            "ssl": {
              "enabled": true,
              "certificate": {
                "path": "/etc/ssl/certs/server.crt",
                "key": "/etc/ssl/private/server.key"
              }
            }
          },
          "database": {
            "primary": {
              "host": "postgres-primary.db.svc.cluster.local",
              "port": 5432,
              "database": "users",
              "connection_pool": {
                "min_size": 5,
                "max_size": 50,
                "acquire_timeout": 30,
                "idle_timeout": 600
              }
            },
            "replica": {
              "hosts": [
                "postgres-replica-1.db.svc.cluster.local",
                "postgres-replica-2.db.svc.cluster.local",
                "postgres-replica-3.db.svc.cluster.local"
              ],
              "port": 5432,
              "database": "users",
              "read_preference": "secondary_preferred"
            }
          },
          "cache": {
            "redis": {
              "cluster": {
                "nodes": [
                  {
                    "host": "redis-1.cache.svc.cluster.local",
                    "port": 6379,
                    "role": "master"
                  },
                  {
                    "host": "redis-2.cache.svc.cluster.local",
                    "port": 6379,
                    "role": "slave"
                  },
                  {
                    "host": "redis-3.cache.svc.cluster.local",
                    "port": 6379,
                    "role": "slave"
                  }
                ],
                "sentinel": {
                  "enabled": true,
                  "master_name": "mymaster",
                  "nodes": [
                    "sentinel-1.cache.svc.cluster.local:26379",
                    "sentinel-2.cache.svc.cluster.local:26379",
                    "sentinel-3.cache.svc.cluster.local:26379"
                  ]
                }
              },
              "settings": {
                "default_ttl": 3600,
                "max_memory": "512mb",
                "eviction_policy": "allkeys-lru"
              }
            }
          }
        },
        "api": {
          "endpoints": {
            "authentication": {
              "/auth/login": {
                "method": "POST",
                "rate_limit": {
                  "requests_per_minute": 10,
                  "burst": 5
                },
                "request_body": {
                  "required_fields": ["email", "password"],
                  "optional_fields": ["remember_me", "device_id"]
                },
                "responses": {
                  "200": {
                    "description": "Login successful",
                    "headers": {
                      "Set-Cookie": "session_token=...; HttpOnly; Secure",
                      "X-Rate-Limit-Remaining": "9"
                    }
                  },
                  "401": {
                    "description": "Invalid credentials",
                    "error_codes": ["INVALID_EMAIL", "INVALID_PASSWORD", "ACCOUNT_LOCKED"]
                  },
                  "429": {
                    "description": "Rate limit exceeded",
                    "retry_after": 60
                  }
                }
              },
              "/auth/logout": {
                "method": "POST",
                "authentication": "required",
                "responses": {
                  "200": {
                    "description": "Logout successful"
                  },
                  "401": {
                    "description": "Not authenticated"
                  }
                }
              },
              "/auth/refresh": {
                "method": "POST",
                "rate_limit": {
                  "requests_per_minute": 5,
                  "burst": 2
                },
                "request_headers": {
                  "required": ["Authorization"],
                  "optional": ["X-Device-ID"]
                }
              }
            },
            "user_management": {
              "/users": {
                "GET": {
                  "description": "List users with pagination",
                  "query_parameters": {
                    "page": {
                      "type": "integer",
                      "default": 1,
                      "minimum": 1
                    },
                    "limit": {
                      "type": "integer",
                      "default": 20,
                      "minimum": 1,
                      "maximum": 100
                    },
                    "filter": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": ["active", "inactive", "suspended"]
                        },
                        "role": {
                          "type": "string",
                          "enum": ["admin", "user", "moderator"]
                        },
                        "created_after": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                },
                "POST": {
                  "description": "Create new user",
                  "request_body": {
                    "schema": {
                      "type": "object",
                      "required": ["email", "password", "first_name", "last_name"],
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email",
                          "maxLength": 255
                        },
                        "password": {
                          "type": "string",
                          "minLength": 8,
                          "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]"
                        },
                        "first_name": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 50
                        },
                        "last_name": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 50
                        },
                        "profile": {
                          "type": "object",
                          "properties": {
                            "bio": {
                              "type": "string",
                              "maxLength": 500
                            },
                            "avatar_url": {
                              "type": "string",
                              "format": "uri"
                            },
                            "preferences": {
                              "type": "object",
                              "properties": {
                                "theme": {
                                  "type": "string",
                                  "enum": ["light", "dark", "auto"]
                                },
                                "language": {
                                  "type": "string",
                                  "enum": ["en", "es", "fr", "de", "it", "pt"]
                                },
                                "notifications": {
                                  "type": "object",
                                  "properties": {
                                    "email": {
                                      "type": "boolean",
                                      "default": true
                                    },
                                    "push": {
                                      "type": "boolean",
                                      "default": true
                                    },
                                    "sms": {
                                      "type": "boolean",
                                      "default": false
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "/users/{id}": {
                "GET": {
                  "description": "Get user by ID",
                  "path_parameters": {
                    "id": {
                      "type": "string",
                      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$"
                    }
                  }
                },
                "PUT": {
                  "description": "Update user",
                  "authentication": "required",
                  "authorization": {
                    "required_permissions": ["user:update"],
                    "resource_ownership": true
                  }
                },
                "DELETE": {
                  "description": "Delete user",
                  "authentication": "required",
                  "authorization": {
                    "required_permissions": ["user:delete"],
                    "required_roles": ["admin"]
                  }
                }
              }
            }
          }
        }
      },
      "order_service": {
        "metadata": {
          "name": "order-service",
          "version": "v1.8.2",
          "description": "Order processing and management service"
        },
        "configuration": {
          "server": {
            "port": 8081,
            "host": "0.0.0.0",
            "timeout": {
              "read": 30,
              "write": 30,
              "idle": 120
            }
          },
          "external_services": {
            "payment_service": {
              "url": "http://payment-service.payments.svc.cluster.local:8082",
              "timeout": 10,
              "retry": {
                "max_attempts": 3,
                "backoff": {
                  "initial_delay": 1,
                  "max_delay": 30,
                  "multiplier": 2.0
                }
              },
              "circuit_breaker": {
                "failure_threshold": 5,
                "recovery_timeout": 60,
                "expected_exceptions": ["TimeoutException", "ConnectionException"]
              }
            },
            "inventory_service": {
              "url": "http://inventory-service.inventory.svc.cluster.local:8083",
              "timeout": 5,
              "retry": {
                "max_attempts": 2,
                "backoff": {
                  "initial_delay": 0.5,
                  "max_delay": 10,
                  "multiplier": 1.5
                }
              }
            },
            "notification_service": {
              "url": "http://notification-service.notifications.svc.cluster.local:8084",
              "timeout": 15,
              "async": true,
              "queue": {
                "name": "order_notifications",
                "durable": true,
                "auto_delete": false,
                "max_length": 10000
              }
            }
          },
          "workflow": {
            "order_processing": {
              "steps": [
                {
                  "name": "validate_order",
                  "service": "internal",
                  "timeout": 5,
                  "retry_on_failure": true
                },
                {
                  "name": "check_inventory",
                  "service": "inventory_service",
                  "timeout": 10,
                  "critical": true,
                  "failure_action": "cancel_order"
                },
                {
                  "name": "reserve_items",
                  "service": "inventory_service",
                  "timeout": 15,
                  "compensate_on_failure": "release_reservation"
                },
                {
                  "name": "process_payment",
                  "service": "payment_service",
                  "timeout": 30,
                  "critical": true,
                  "failure_action": "cancel_order"
                },
                {
                  "name": "update_inventory",
                  "service": "inventory_service",
                  "timeout": 10,
                  "retry_on_failure": true
                },
                {
                  "name": "send_confirmation",
                  "service": "notification_service",
                  "timeout": 5,
                  "async": true,
                  "optional": true
                }
              ],
              "compensation": {
                "enabled": true,
                "timeout": 60,
                "max_retries": 3
              }
            }
          }
        }
      },
      "payment_service": {
        "metadata": {
          "name": "payment-service",
          "version": "v3.0.1",
          "description": "Payment processing and financial operations service"
        },
        "configuration": {
          "providers": {
            "stripe": {
              "api_version": "2023-10-16",
              "webhook_endpoints": [
                {
                  "url": "https://api.example.com/webhooks/stripe",
                  "events": ["payment_intent.succeeded", "payment_intent.payment_failed"],
                  "secret": "${STRIPE_WEBHOOK_SECRET}"
                }
              ],
              "supported_payment_methods": [
                {
                  "type": "card",
                  "cards": ["visa", "mastercard", "amex", "discover"],
                  "currencies": ["USD", "EUR", "GBP"]
                },
                {
                  "type": "bank_transfer",
                  "countries": ["US", "GB", "DE", "FR"],
                  "processing_time": "1-3 business days"
                },
                {
                  "type": "digital_wallet",
                  "wallets": ["apple_pay", "google_pay", "samsung_pay"],
                  "platforms": ["web", "mobile"]
                }
              ]
            },
            "paypal": {
              "api_version": "v2",
              "environment": "production",
              "webhook_events": [
                "PAYMENT.CAPTURE.COMPLETED",
                "PAYMENT.CAPTURE.DENIED",
                "BILLING.SUBSCRIPTION.CREATED"
              ],
              "supported_features": {
                "express_checkout": {
                  "enabled": true,
                  "button_style": {
                    "layout": "vertical",
                    "color": "gold",
                    "shape": "rect",
                    "label": "paypal"
                  }
                },
                "subscriptions": {
                  "enabled": true,
                  "billing_cycles": [
                    {
                      "frequency": "monthly",
                      "tenure_type": "REGULAR",
                      "sequence": 1,
                      "total_cycles": 0
                    }
                  ]
                }
              }
            }
          },
          "fraud_detection": {
            "enabled": true,
            "providers": ["internal", "stripe_radar"],
            "rules": [
              {
                "name": "velocity_check",
                "description": "Detect unusual payment frequency",
                "conditions": {
                  "payment_count": {
                    "threshold": 10,
                    "time_window": "1h",
                    "per": "user"
                  }
                },
                "action": "review"
              },
              {
                "name": "amount_threshold",
                "description": "Review high-value transactions",
                "conditions": {
                  "amount": {
                    "threshold": 5000.00,
                    "currency": "USD"
                  }
                },
                "action": "manual_review"
              },
              {
                "name": "geolocation_check",
                "description": "Flag payments from high-risk countries",
                "conditions": {
                  "country_codes": ["XX", "YY", "ZZ"],
                  "vpn_detection": true
                },
                "action": "block"
              }
            ]
          }
        }
      }
    },
    "infrastructure": {
      "monitoring": {
        "prometheus": {
          "global_config": {
            "scrape_interval": "15s",
            "evaluation_interval": "15s",
            "external_labels": {
              "cluster": "production",
              "region": "us-west-2"
            }
          },
          "alert_rules": [
            {
              "name": "service_down",
              "expression": "up == 0",
              "duration": "5m",
              "severity": "critical",
              "annotations": {
                "summary": "Service {{ $labels.instance }} is down",
                "description": "{{ $labels.instance }} has been down for more than 5 minutes"
              }
            },
            {
              "name": "high_error_rate",
              "expression": "rate(http_requests_total{status=~\"5..\"}[5m]) > 0.1",
              "duration": "2m",
              "severity": "warning",
              "annotations": {
                "summary": "High error rate on {{ $labels.service }}",
                "description": "Error rate is {{ $value | humanizePercentage }}"
              }
            }
          ]
        },
        "grafana": {
          "dashboards": [
            {
              "name": "Service Overview",
              "panels": [
                {
                  "title": "Request Rate",
                  "type": "graph",
                  "targets": [
                    {
                      "expr": "rate(http_requests_total[5m])",
                      "legend": "{{ service }}"
                    }
                  ]
                },
                {
                  "title": "Error Rate",
                  "type": "singlestat",
                  "targets": [
                    {
                      "expr": "rate(http_requests_total{status=~\"5..\"}[5m]) / rate(http_requests_total[5m])",
                      "format": "percentunit"
                    }
                  ]
                }
              ]
            }
          ]
        }
      },
      "logging": {
        "elasticsearch": {
          "cluster": {
            "name": "production-logs",
            "nodes": [
              {
                "name": "master-1",
                "roles": ["master"],
                "heap_size": "2g"
              },
              {
                "name": "data-1",
                "roles": ["data", "ingest"],
                "heap_size": "8g"
              },
              {
                "name": "data-2",
                "roles": ["data", "ingest"],
                "heap_size": "8g"
              }
            ]
          },
          "indices": {
            "patterns": [
              {
                "name": "microservices-*",
                "template": {
                  "settings": {
                    "number_of_shards": 3,
                    "number_of_replicas": 1
                  },
                  "mappings": {
                    "properties": {
                      "timestamp": {
                        "type": "date"
                      },
                      "level": {
                        "type": "keyword"
                      },
                      "service": {
                        "type": "keyword"
                      },
                      "message": {
                        "type": "text",
                        "analyzer": "standard"
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      }
    }
  }
}